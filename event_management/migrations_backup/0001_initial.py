# Generated by Django 5.0.2 on 2025-06-27 18:52

import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('color', models.CharField(default='#3B82F6', max_length=7)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PlatformPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(unique=True)),
                ('max_tickets', models.IntegerField(help_text='-1 for unlimited')),
                ('price_per_event', models.DecimalField(decimal_places=2, max_digits=6)),
                ('price_per_month', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('price_per_year', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('features', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('display_order', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['display_order', 'price_per_event'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('description', models.TextField()),
                ('venue', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=300)),
                ('date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='events/')),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('capacity', models.IntegerField(default=100)),
                ('tickets_sold', models.IntegerField(default=0)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_premium', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('pet_friendly', models.BooleanField(default=False)),
                ('family_friendly', models.BooleanField(default=True)),
                ('has_offers', models.BooleanField(default=False)),
                ('plan_paid', models.BooleanField(default=False)),
                ('paypal_order_id', models.CharField(blank=True, max_length=255)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False, help_text='Event must be approved by admin before appearing publicly')),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_events', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='event_management.category')),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='authentication.organizer')),
                ('platform_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='event_management.platformplan')),
            ],
            options={
                'ordering': ['date'],
                'permissions': [('can_approve_events', 'Can approve events')],
            },
        ),
        migrations.CreateModel(
            name='EventImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='events/gallery/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('order', models.IntegerField(default=0)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='event_management.event')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='EventPlanPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=6)),
                ('paypal_order_id', models.CharField(max_length=255)),
                ('paid_at', models.DateTimeField(auto_now_add=True)),
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='plan_payment', to='event_management.event')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='event_management.platformplan')),
            ],
        ),
        migrations.CreateModel(
            name='TicketType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('quantity_available', models.IntegerField()),
                ('quantity_sold', models.IntegerField(default=0)),
                ('sale_starts', models.DateTimeField(default=django.utils.timezone.now)),
                ('sale_ends', models.DateTimeField()),
                ('display_order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_types', to='event_management.event')),
            ],
            options={
                'ordering': ['display_order', 'price'],
            },
        ),
        migrations.AddIndex(
            model_name='event',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='event_manag_search__7bb5cc_gin'),
        ),
    ]
