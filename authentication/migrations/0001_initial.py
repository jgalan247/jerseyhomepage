# Generated by Django 5.0.2 on 2025-06-27 18:50

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('newsletter_subscription', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('email_verified', models.BooleanField(default=False)),
                ('email_verification_token', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Organizer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('company_registration', models.CharField(blank=True, max_length=100)),
                ('vat_number', models.CharField(blank=True, max_length=50)),
                ('business_email', models.EmailField(max_length=254)),
                ('business_phone', models.CharField(max_length=20)),
                ('website', models.URLField(blank=True)),
                ('address_line_1', models.CharField(max_length=255)),
                ('address_line_2', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('parish', models.CharField(choices=[('St Helier', 'St Helier'), ('St Clement', 'St Clement'), ('St Saviour', 'St Saviour'), ('St Brelade', 'St Brelade'), ('St Lawrence', 'St Lawrence'), ('St Peter', 'St Peter'), ('St Mary', 'St Mary'), ('St John', 'St John'), ('St Ouen', 'St Ouen'), ('St Martin', 'St Martin'), ('Grouville', 'Grouville'), ('Trinity', 'Trinity')], default='St Helier', max_length=50)),
                ('postal_code', models.CharField(max_length=10)),
                ('paypal_email', models.EmailField(blank=True, help_text='PayPal Business account email for receiving payments', max_length=254)),
                ('payment_ready', models.BooleanField(default=False, help_text='Whether PayPal account is set up and ready to receive payments')),
                ('payment_setup_date', models.DateTimeField(blank=True, help_text='When payment account was set up', null=True)),
                ('is_verified', models.BooleanField(default=False, help_text='Verified by platform admin')),
                ('verification_documents', models.FileField(blank=True, null=True, upload_to='organizer_docs/')),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('commission_rate', models.DecimalField(decimal_places=2, default=10.0, help_text='Platform commission percentage', max_digits=5)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='organizer_logos/')),
                ('description', models.TextField(help_text='About your organization')),
                ('facebook', models.URLField(blank=True)),
                ('instagram', models.URLField(blank=True)),
                ('twitter', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='organizer', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_organizers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Organizer',
                'verbose_name_plural': 'Organizers',
                'db_table': 'organizers',
            },
        ),
    ]
